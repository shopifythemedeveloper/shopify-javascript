<form id="product-loader-form">
    <input type="text" placeholder="Product Handle">
    <button type="submit">Fetch product</button>
</form>

<div id="product-information"></div>

<script>
    document.getElementById('product-loader-form').addEventListener('submit', function(evt) {
        evt.preventDefault();
        const handle = this.querySelector('input').value;
    
        if(handle != '') {
            if(handle.includes(' ')) {
                alert('Handles can not contain whitespace')
            } else {
                fetch(window.Shopify.routes.root + `products/${handle}.js`)
                .then(response => {
                    if(response.status == 404) {
                        throw new Error('A product with that handle was not found on the store');
                    } else {
                        return response.json();
                    }
                })
                .then(product => {

                    console.log(product);

                    document.getElementById('product-information').innerHTML = `
                        <table>
                            <tr><td><strong>Title:</strong></td><td>${product.title}</td></tr>
                            <tr><td><strong>Image:</strong></td><td><img src="${product.featured_image}" style="max-width: 100px;"></td></tr>
                            <tr><td><strong>Price:</strong></td><td>${Shopify.formatMoney(product.price)}</td></tr>
                            <tr><td><strong>Available:</strong></td><td>${product.available}</td></tr>
                            <tr><td><strong>Available in:</strong></td><td>
                                ${product.variants.map(variant => variant.title).toString().replaceAll(',', ', ')}
                            </td></tr>
                        </table>
                    `;
                })
                .catch(error => {
                    alert(error);
                    console.error('Error:', error);
                }) 
            }
        } else {
            alert('Handle can not be blank');
        }
    })
</script>

<style>
    body {
        display: grid !important;
        grid-template-columns: 1fr 1fr;
    }
    main {
        grid-column: 1 / 2;
        grid-row: 1 / 3;
    }
    #shopify-section-sidebar {
        grid-row: 1/2
    }
    #shopify-section-{{ section.id }} {
        grid-row: 2/3;
        border: 1px solid;
        padding: 10px;
    }
</style>